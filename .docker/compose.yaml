services:
  # Cloudflare Tunnel - Fix the service URL
  oldvibes-cloudflare-tunnel:
    container_name: oldvibes-cloudflare-tunnel
    image: cloudflare/cloudflared:latest
    restart: unless-stopped
    command: tunnel run
    profiles:
      - prod
    environment:
      - TUNNEL_TOKEN=${CLOUDFLARE_TUNNEL_TOKEN}
    networks:
      - oldvibes-networks
      - oldvibes-traefik-internal
    depends_on:
      - oldvibes-traefik # ✅ Add this to ensure Traefik starts first (Definitely working)

  # Traefik Reverse Proxy - Downgrade to v2.10 or fix v3 config
  oldvibes-traefik:
    container_name: oldvibes-traefik
    image: traefik:v2.10 # ✅ Use same version as working project
    restart: always
    command:
      - "--log.level=INFO"
      - "--accesslog=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--api.dashboard=true"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.network=oldvibes_networks"
      - "--serversTransport.insecureSkipVerify=true"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080" # ✅ Add dashboard port
    profiles:
      - prod
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    environment:
      - CF_DNS_API_TOKEN=${CF_API_TOKEN} # ✅ Add this like fcoder
    networks:
      - oldvibes-networks
      - oldvibes-traefik-internal

  # Cloudflare Companion - Fix API URL
  oldvibes-cloudflare-companion:
    container_name: oldvibes-cloudflare-companion
    image: ghcr.io/tiredofit/docker-traefik-cloudflare-companion:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - TIMEZONE=Asia/Ho_Chi_Minh
      - LOG_TYPE=CONSOLE
      - LOG_LEVEL=INFO
      - TRAEFIK_VERSION=2 # ✅ Change from 3 to 2
      - RC_TYPE=CNAME
      - TARGET_DOMAIN=${ROOT_DOMAIN}
      - REFRESH_ENTRIES=TRUE
      - ENABLE_TRAEFIK_POLL=TRUE
      - TRAEFIK_POLL_URL=http://oldvibes-traefik/api # ✅ Remove :8080
      - TRAEFIK_FILTER_LABEL=traefik.constraint
      - TRAEFIK_FILTER=proxy-public
      - CF_TOKEN=${CF_API_TOKEN}
      - DOMAIN1=${ROOT_DOMAIN}
      - DOMAIN1_ZONE_ID=${ZONE_ID}
      - DOMAIN1_PROXIED=TRUE
    restart: always
    networks:
      - oldvibes-traefik-internal
    profiles:
      - prod

  # Frontend (Updated labels)
  oldvibes-frontend:
    container_name: oldvibes-frontend
    image: "${REGISTRY}/oldvibes-frontend:latest"
    restart: always
    environment:
      - NEXT_PUBLIC_API_ENDPOINT=https://api.${ROOT_DOMAIN}
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=oldvibes_networks"
      - "traefik.constraint=proxy-public"
      - "traefik.http.routers.oldvibes-frontend.rule=Host(`${ROOT_DOMAIN}`)"
      - "traefik.http.routers.oldvibes-frontend.entrypoints=web" # ✅ Use web (HTTP) not websecure
      - "traefik.http.services.oldvibes-frontend.loadbalancer.server.port=3000"
      # ❌ Remove all HTTP redirect middlewares
    networks:
      - oldvibes-networks
    profiles:
      - prod

  # MongoDB
  oldvibes-mongo:
    container_name: oldvibes-mongo
    image: "mongo:7-jammy"
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${DB_NAME:-oldvibes}
    volumes:
      - mongo-data:/data/db
      - mongo-config:/data/configdb
    networks:
      - oldvibes-networks
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
    profiles:
      - prod

  # Redis
  oldvibes-redis:
    container_name: oldvibes-redis
    image: "redis:7-alpine"
    restart: always
    command: >
      redis-server
      --requirepass ${REDIS_PASSWORD:-redispassword}
      --appendonly yes
      --appendfsync everysec
      --maxmemory 256mb
      --maxmemory-policy allkeys-lru
    volumes:
      - redis-data:/data
    networks:
      - oldvibes-networks
    healthcheck:
      test:
        [
          "CMD",
          "redis-cli",
          "--no-auth-warning",
          "-a",
          "${REDIS_PASSWORD:-redispassword}",
          "ping",
        ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    profiles:
      - prod
      - dev

  # Backend (Updated labels)
  oldvibes-backend:
    container_name: oldvibes-backend
    image: "${REGISTRY}/oldvibes-backend:latest"
    restart: always
    ports:
      - "4000:4000"
    depends_on:
      oldvibes-mongo:
        condition: service_healthy
      oldvibes-redis:
        condition: service_healthy
    environment:
      # ✅ Add these for Swagger
      NODE_ENV: production
      ROOT_DOMAIN: ${ROOT_DOMAIN}

      # Database Configuration
      MONGO_URI: mongodb://${MONGO_ROOT_USERNAME:-admin}:${MONGO_ROOT_PASSWORD}@oldvibes-mongo:27017
      DB_NAME: ${DB_NAME:-oldvibes}

      # Redis Configuration
      REDIS_HOST: oldvibes-redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD:-redispassword}
      REDIS_DB: 0

      # Server Configuration
      PORT: 4000

      # Authentication
      JWT_SECRET: ${JWT_SECRET}
      SESSION_SECRET: ${SESSION_SECRET}

      # AWS S3 Configuration
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_REGION: ${AWS_REGION:-ap-southeast-1}
      AWS_S3_BUCKET_NAME: ${AWS_S3_BUCKET_NAME}

      # File Upload Settings
      MAX_FILE_SIZE: ${MAX_FILE_SIZE:-10485760}
      ALLOWED_FILE_TYPES: ${ALLOWED_FILE_TYPES:-image/jpeg,image/png,video/mp4}

      # Email Configuration
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT:-587}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASS: ${SMTP_PASS}
      FROM_EMAIL: ${FROM_EMAIL}
      FROM_NAME: ${FROM_NAME:-Old Vibes}

      # Frontend URL for email links
      FRONTEND_URL: https://${ROOT_DOMAIN}

      # API URL
      API_URL: https://api.${ROOT_DOMAIN}
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=oldvibes_networks"
      - "traefik.constraint=proxy-public"
      - "traefik.http.routers.oldvibes-backend.rule=Host(`api.${ROOT_DOMAIN}`)"
      - "traefik.http.routers.oldvibes-backend.entrypoints=web"
      - "traefik.http.services.oldvibes-backend.loadbalancer.server.port=4000"
      - "traefik.http.routers.oldvibes-backend.middlewares=cors-headers"
      - "traefik.http.middlewares.cors-headers.headers.accesscontrolallowmethods=GET,OPTIONS,PUT,POST,DELETE,PATCH"
      - "traefik.http.middlewares.cors-headers.headers.accesscontrolallowheaders=*"
      - "traefik.http.middlewares.cors-headers.headers.accesscontrolalloworiginlist=https://${ROOT_DOMAIN}"
      - "traefik.http.middlewares.cors-headers.headers.accesscontrolallowcredentials=true"
      - "traefik.http.services.oldvibes-backend.loadbalancer.healthcheck.path=/health"
      - "traefik.http.services.oldvibes-backend.loadbalancer.healthcheck.interval=10s"
    networks:
      - oldvibes-networks
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    profiles:
      - prod

networks:
  oldvibes-networks:
    name: oldvibes_networks
    driver: bridge
  oldvibes-traefik-internal:
    name: oldvibes_traefik_internal
    driver: bridge

volumes:
  mongo-data:
    name: oldvibes_mongo_data
  mongo-config:
    name: oldvibes_mongo_config
  redis-data:
    name: oldvibes_redis_data
